name: CONTINUOUS DELIVERY AND DEPLOYMENT

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    env:
      NODE_ENV: test
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      CLOUDINARY_NAME: ${{ secrets.CLOUDINARY_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET_KEY: ${{ secrets.CLOUDINARY_API_SECRET_KEY }}
      REDIS_URI: ${{ secrets.REDIS_URI }}
      JWT_ACCESS_TOKEN_SECRET_KEY: ${{ secrets.JWT_ACCESS_TOKEN_SECRET_KEY }}
      JWT_REFRESH_TOKEN_SECRET_KEY: ${{ secrets.JWT_REFRESH_TOKEN_SECRET_KEY }}
      JWT_RECOVER_SESSION_TOKEN_SECRET_KEY: ${{secrets.JWT_RECOVER_SESSION_TOKEN_SECRET_KEY}}
      SMTP_HOST: ${{secrets.SMTP_HOST}}
      SMTP_PORT: ${{secrets.SMTP_PORT}}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Login In To Docker
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Build The Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            abdullah00001/amar-contacts:${{github.ref_name}}
            abdullah00001/amar-contacts:latest
          build-args: |
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET_KEY=${{ secrets.CLOUDINARY_API_SECRET_KEY }}
            REDIS_URI=${{ secrets.REDIS_URI }}
            JWT_ACCESS_TOKEN_SECRET_KEY=${{ secrets.JWT_ACCESS_TOKEN_SECRET_KEY }}
            JWT_REFRESH_TOKEN_SECRET_KEY=${{ secrets.JWT_REFRESH_TOKEN_SECRET_KEY }}
            JWT_RECOVER_SESSION_TOKEN_SECRET_KEY=${{ secrets.JWT_RECOVER_SESSION_TOKEN_SECRET_KEY }}
            SMTP_HOST=${{ secrets.SMTP_HOST }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            SMTP_USER=${{ secrets.SMTP_USER }}
            SMTP_PASS=${{ secrets.SMTP_PASS }}
      - name: Deploy to Render
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
